---
title: "Hands-on Exercise 4d: Visualising Models"
author: "Ou Yiming"
date-published: "last-published"
date-modified: "last-modified"
execute:
  echo: true
  eval: true
  warning: false
  freeze: true
---

## **Overview**

In this section, you will learn how to visualise model diagnostic and model parameters by using parameters package.

## Visual Analytics for Building Better Explanatory Models

### The case

Toyota Corolla case study will be used. The purpose of study is to build a model to discover factors affecting prices of used-cars by taking into consideration a set of explanatory variables.

### Getting Started

### Installing and loading the required libraries

```{r}
pacman::p_load(readxl, SmartEDA, tidyverse, ggstatsplot, easystats, tidymodels)
```

### Importing Excel file: readxl methods

In the code chunk below, [*read_xls()*](https://readxl.tidyverse.org/reference/read_excel.html) of [**readxl**](https://readxl.tidyverse.org/) package is used to import the data worksheet of `ToyotaCorolla.xls` workbook into R.

```{r}
car_resale <- read_xls("data/ToyotaCorolla.xls", "data")
car_resale
```

### Multiple Regression Model using lm()

The code chunk below is used to calibrate a multiple linear regression model by using *lm()* of Base Stats of R.

```{r}
model <- lm(Price ~ Age_08_04 + Mfg_Year + KM + 
              Weight + Guarantee_Period, data = car_resale)
model
```

### Model Diagnostic: checking for multicolinearity:

In the code chunk, [*check_collinearity()*](https://easystats.github.io/performance/reference/check_collinearity.html) of [**performance**](https://easystats.github.io/performance/index.html) package.

```{r}
check_collinearity(model)
```

```{r}
check_c <- check_collinearity(model)
plot(check_c)
```

### Model Diagnostic: checking normality assumption

In the code chunk, [*check_normality()*](https://easystats.github.io/performance/reference/check_normality.html) of [**performance**](https://easystats.github.io/performance/index.html) package.

```{r}
model1 <- lm(Price ~ Age_08_04 + KM + 
              Weight + Guarantee_Period, data = car_resale)
check_n <- check_normality(model1)
plot(check_n)
```

### Model Diagnostic: Check model for homogeneity of variances

In the code chunk, [*check_heteroscedasticity()*](https://easystats.github.io/performance/reference/check_heteroscedasticity.html) of [**performance**](https://easystats.github.io/performance/index.html) package.

```{r}
check_h <- check_heteroscedasticity(model1)
plot(check_h)
```

### Model Diagnostic: Complete check

We can also perform the complete by using [*check_model()*](https://easystats.github.io/performance/reference/check_model.html).

```{r}
check_model(model1)
```

### Visualizing Regression Parameters: see methods

In the code below, plot() of see package and parameters() of parameters package is used to visualise the parameters of a regression model.

```{r}
plot(model_parameters(model1))
```

### Visualizing Regression Parameters: ggcoefstats() methods

In the code below, [*ggcoefstats()*](https://indrajeetpatil.github.io/ggstatsplot/reference/ggcoefstats.html) of ggstatsplot package to visualise the parameters of a regression model.

```{r}
ggcoefstats(model1, 
            output = "plot")
```

### Reference

-   Prof Kam Tin Seong (2025) https://r4va.netlify.app/chap12. Online version
