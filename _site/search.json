[
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "title": "Take-home Excercise 1: Creating data visualization beyond default",
    "section": "",
    "text": "This dataset contains information on heart attack cases in Japan, capturing various patient attributes such as age, gender, blood pressure, cholesterol levels, and other health indicators. Analyzing these factors can provide insights into key contributors to heart attacks and help identify high-risk groups.\n\n\n\nUsing the dataset, this post aims to utilize appropriate Exploratory Data Analysis (EDA) techniques and ggplot2 functions to:\n\nExamine the distribution of heart attack occurrences based on patient demographics and medical history, and\nInvestigate the relationships between heart attack incidence and factors such as age, gender, cholesterol levels, blood pressure, and other relevant health parameters."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#context",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#context",
    "title": "Take-home Excercise 1: Creating data visualization beyond default",
    "section": "",
    "text": "This dataset contains information on heart attack cases in Japan, capturing various patient attributes such as age, gender, blood pressure, cholesterol levels, and other health indicators. Analyzing these factors can provide insights into key contributors to heart attacks and help identify high-risk groups."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#task",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#task",
    "title": "Take-home Excercise 1: Creating data visualization beyond default",
    "section": "",
    "text": "Using the dataset, this post aims to utilize appropriate Exploratory Data Analysis (EDA) techniques and ggplot2 functions to:\n\nExamine the distribution of heart attack occurrences based on patient demographics and medical history, and\nInvestigate the relationships between heart attack incidence and factors such as age, gender, cholesterol levels, blood pressure, and other relevant health parameters."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#load-packages",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#load-packages",
    "title": "Take-home Excercise 1: Creating data visualization beyond default",
    "section": "2.1 Load packages",
    "text": "2.1 Load packages\nThe following R packages will be loaded using the p_load() function for the analysis.\n\ntidyverse: Core collection of R packages designed for data science.\n\n\n\nmoments: Statistical package for calculating moments such as skewness and kurtosis.\nggrepel: Provides geoms for ggplot2 to repel overlapping text labels, making plots more readable.\nggthemes: Provides additional themes for ggplot2, enhancing plot aesthetics.\ndplyr: A package for data manipulation, providing easy-to-use functions for transforming, summarizing, and filtering data.\nggstatsplot: An extension of ggplot2 that provides easy-to-use functions for visualizing statistical results, including p-values and confidence intervals.\nggalluvial: A ggplot2 extension for creating alluvial diagrams, useful for visualizing categorical data flows and relationships across multiple variables.\n\n\n\nCode\npacman::p_load(tidyverse, moments, ggrepel, ggthemes,\n               patchwork, dplyr, ggstatsplot, ggalluvial)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#import-data",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#import-data",
    "title": "Take-home Excercise 1: Creating data visualization beyond default",
    "section": "2.2 Import data",
    "text": "2.2 Import data\nThe dataset (japan_heart_attack_dataset.csv) used in this exercise is sourced from the Kaggle project titled “Heart Attack in Japan (Youth vs Adult)” by Ashay Choudhary. This dataset provides information on heart attack cases in Japan, focusing on both youth and adult populations, and includes various health-related attributes such as age, cholesterol levels, blood pressure, and more.\nThe dataset will be imported as jha.\n\n\nCode\njha &lt;- read_csv(\"data/japan_heart_attack_dataset.csv\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-pre-processing",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-pre-processing",
    "title": "Take-home Excercise 1: Creating data visualization beyond default",
    "section": "2.2 Data pre-processing",
    "text": "2.2 Data pre-processing\nIn this section, we will be focusing on the pre-proccessing of the data that we will be using for the analysis.\n\n2.2.1 Glimpse of Data\nUsing the glimpse function, we can see that dataset contains 30,000 observations (rows) across 32 variables (columns). Each observation corresponds to a patient case from the heart attack dataset in Japan, and the variables provide information on various health indicators. The column names, column type, and the first few entries of each column can be observed below.\n\n\nCode\nglimpse(jha)\n\n\nRows: 30,000\nColumns: 32\n$ Age                     &lt;dbl&gt; 56, 69, 46, 32, 60, 25, 78, 38, 56, 75, 36, 40…\n$ Gender                  &lt;chr&gt; \"Male\", \"Male\", \"Male\", \"Female\", \"Female\", \"F…\n$ Region                  &lt;chr&gt; \"Urban\", \"Urban\", \"Rural\", \"Urban\", \"Rural\", \"…\n$ Smoking_History         &lt;chr&gt; \"Yes\", \"No\", \"Yes\", \"No\", \"No\", \"No\", \"No\", \"Y…\n$ Diabetes_History        &lt;chr&gt; \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"Yes\", \"No…\n$ Hypertension_History    &lt;chr&gt; \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"Yes\", \"No…\n$ Cholesterol_Level       &lt;dbl&gt; 186.4002, 185.1367, 210.6966, 211.1655, 223.81…\n$ Physical_Activity       &lt;chr&gt; \"Moderate\", \"Low\", \"Low\", \"Moderate\", \"High\", …\n$ Diet_Quality            &lt;chr&gt; \"Poor\", \"Good\", \"Average\", \"Good\", \"Good\", \"Go…\n$ Alcohol_Consumption     &lt;chr&gt; \"Low\", \"Low\", \"Moderate\", \"High\", \"High\", \"Hig…\n$ Stress_Levels           &lt;dbl&gt; 3.644786, 3.384056, 3.810911, 6.014878, 6.8068…\n$ BMI                     &lt;dbl&gt; 33.96135, 28.24287, 27.60121, 23.71729, 19.771…\n$ Heart_Rate              &lt;dbl&gt; 72.30153, 57.45764, 64.65870, 55.13147, 76.667…\n$ Systolic_BP             &lt;dbl&gt; 123.90209, 129.89331, 145.65490, 131.78522, 10…\n$ Diastolic_BP            &lt;dbl&gt; 85.68281, 73.52426, 71.99481, 68.21133, 92.902…\n$ Family_History          &lt;chr&gt; \"No\", \"Yes\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No…\n$ Heart_Attack_Occurrence &lt;chr&gt; \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\"…\n$ Extra_Column_1          &lt;dbl&gt; 0.40498852, 0.03627815, 0.85297888, 0.39085280…\n$ Extra_Column_2          &lt;dbl&gt; 0.43330004, 0.51256694, 0.21959083, 0.29684675…\n$ Extra_Column_3          &lt;dbl&gt; 0.62871236, 0.66839275, 0.61343656, 0.15572404…\n$ Extra_Column_4          &lt;dbl&gt; 0.70160955, 0.11552874, 0.50800995, 0.87025144…\n$ Extra_Column_5          &lt;dbl&gt; 0.49814235, 0.42381938, 0.90066981, 0.39035591…\n$ Extra_Column_6          &lt;dbl&gt; 0.007901312, 0.083932768, 0.227205241, 0.40318…\n$ Extra_Column_7          &lt;dbl&gt; 0.79458257, 0.68895108, 0.49634358, 0.74140891…\n$ Extra_Column_8          &lt;dbl&gt; 0.29077922, 0.83016364, 0.75210679, 0.22396813…\n$ Extra_Column_9          &lt;dbl&gt; 0.49719307, 0.63449028, 0.18150125, 0.32931387…\n$ Extra_Column_10         &lt;dbl&gt; 0.52199452, 0.30204337, 0.62918031, 0.14319054…\n$ Extra_Column_11         &lt;dbl&gt; 0.79965663, 0.04368285, 0.01827617, 0.90778075…\n$ Extra_Column_12         &lt;dbl&gt; 0.72239788, 0.45166789, 0.06322702, 0.54232201…\n$ Extra_Column_13         &lt;dbl&gt; 0.1487387, 0.8786714, 0.1465122, 0.9224606, 0.…\n$ Extra_Column_14         &lt;dbl&gt; 0.8340099, 0.5356022, 0.9972962, 0.6262165, 0.…\n$ Extra_Column_15         &lt;dbl&gt; 0.061632229, 0.617825340, 0.974455410, 0.22860…\n\n\n\n\n2.2.2 Removing columns with no description\nDue to a lack of information on the additional columns, we will filter out the extra columns in our dataset as part of the pre-processing. Specifically, we will retain only columns 1 to 17 for our analysis.\n\n\nCode\njha_clean &lt;- jha %&gt;%\n  select(1:17)\n\n\nThe following shows the unique values of each column to identify the amount variation in our variables.\n\n\nCode\nsapply(jha_clean, function(x) length(unique(x)))\n\n\n                    Age                  Gender                  Region \n                     62                       2                       2 \n        Smoking_History        Diabetes_History    Hypertension_History \n                      2                       2                       2 \n      Cholesterol_Level       Physical_Activity            Diet_Quality \n                  30000                       3                       3 \n    Alcohol_Consumption           Stress_Levels                     BMI \n                      4                   29613                   30000 \n             Heart_Rate             Systolic_BP            Diastolic_BP \n                  30000                   30000                   30000 \n         Family_History Heart_Attack_Occurrence \n                      2                       2 \n\n\nThe following shows a summary of the cleaned dataset. Some of the numerical variables in the dataset contain questionable figures which will be dealt in a later step of pre-processing.\n\n\nCode\nsummary(jha_clean)\n\n\n      Age           Gender             Region          Smoking_History   \n Min.   :18.00   Length:30000       Length:30000       Length:30000      \n 1st Qu.:33.00   Class :character   Class :character   Class :character  \n Median :48.00   Mode  :character   Mode  :character   Mode  :character  \n Mean   :48.49                                                           \n 3rd Qu.:64.00                                                           \n Max.   :79.00                                                           \n Diabetes_History   Hypertension_History Cholesterol_Level Physical_Activity \n Length:30000       Length:30000         Min.   : 80.02    Length:30000      \n Class :character   Class :character     1st Qu.:179.55    Class :character  \n Mode  :character   Mode  :character     Median :199.77    Mode  :character  \n                                         Mean   :199.90                      \n                                         3rd Qu.:220.16                      \n                                         Max.   :336.86                      \n Diet_Quality       Alcohol_Consumption Stress_Levels         BMI       \n Length:30000       Length:30000        Min.   : 0.000   Min.   : 5.58  \n Class :character   Class :character    1st Qu.: 3.644   1st Qu.:21.63  \n Mode  :character   Mode  :character    Median : 4.993   Median :24.96  \n                                        Mean   : 5.002   Mean   :25.00  \n                                        3rd Qu.: 6.353   3rd Qu.:28.36  \n                                        Max.   :10.000   Max.   :46.10  \n   Heart_Rate      Systolic_BP      Diastolic_BP    Family_History    \n Min.   : 30.03   Min.   : 56.23   Min.   : 39.95   Length:30000      \n 1st Qu.: 63.25   1st Qu.:109.79   1st Qu.: 73.26   Class :character  \n Median : 69.95   Median :119.90   Median : 80.12   Mode  :character  \n Mean   : 69.98   Mean   :119.91   Mean   : 80.03                     \n 3rd Qu.: 76.66   3rd Qu.:130.02   3rd Qu.: 86.76                     \n Max.   :108.78   Max.   :178.77   Max.   :117.67                     \n Heart_Attack_Occurrence\n Length:30000           \n Class :character       \n Mode  :character       \n                        \n                        \n                        \n\n\n\n\n2.2.3 Checking for duplicates and missing values\nTo ensure data quality, we will check for duplicate rows and missing values in the dataset as part of our pre-processing step. Removing duplicates and handling missing values helps maintain the integrity of our analysis.\nWe can see that there is no duplicate entries in the data.\n\n\nCode\njha_clean[duplicated(jha_clean),]\n\n\n# A tibble: 0 × 17\n# ℹ 17 variables: Age &lt;dbl&gt;, Gender &lt;chr&gt;, Region &lt;chr&gt;, Smoking_History &lt;chr&gt;,\n#   Diabetes_History &lt;chr&gt;, Hypertension_History &lt;chr&gt;,\n#   Cholesterol_Level &lt;dbl&gt;, Physical_Activity &lt;chr&gt;, Diet_Quality &lt;chr&gt;,\n#   Alcohol_Consumption &lt;chr&gt;, Stress_Levels &lt;dbl&gt;, BMI &lt;dbl&gt;,\n#   Heart_Rate &lt;dbl&gt;, Systolic_BP &lt;dbl&gt;, Diastolic_BP &lt;dbl&gt;,\n#   Family_History &lt;chr&gt;, Heart_Attack_Occurrence &lt;chr&gt;\n\n\nWe can also see that there is no missing values in the data.\n\n\nCode\ncolSums(is.na(jha_clean))\n\n\n                    Age                  Gender                  Region \n                      0                       0                       0 \n        Smoking_History        Diabetes_History    Hypertension_History \n                      0                       0                       0 \n      Cholesterol_Level       Physical_Activity            Diet_Quality \n                      0                       0                       0 \n    Alcohol_Consumption           Stress_Levels                     BMI \n                      0                       0                       0 \n             Heart_Rate             Systolic_BP            Diastolic_BP \n                      0                       0                       0 \n         Family_History Heart_Attack_Occurrence \n                      0                       0 \n\n\n\n\n2.2.4 Checking of data structure\nUsing the str() function, we aim to understand the columns/variables being used in our analysis and the data structure they are casted as.\nThe primary columns/variables that are present in the dataset are as follow:\n\n\n\n\n\n\n\n\nVariable Name\nDescription\nType of Variable\n\n\n\n\nAge\nAge of the patient\nNumerical Continuous\n\n\nGender\nGender of the patient (Male/Female)\nCategorical unordered\n\n\nRegion\nGeographic region where the patient resides (Urban/Rural)\nCategorical\n\n\nSmoking_History\nPatient’s smoking history (Yes/No)\nCategorical\n\n\nDiabetes_History\nHistory of diabetes (Yes/No)\nCategorical\n\n\nHypertension_History\nHistory of hypertension (Yes/No)\nCategorical\n\n\nCholesterol_Level\nCholesterol level of the patient\nNumerical Continuous\n\n\nPhysical_Activity\nLevel of physical activity (Low/Moderate/High)\nCategorical\n\n\nDiet_Quality\nQuality of diet (Poor/Average/Good)\nCategorical\n\n\nAlcohol_Consumption\nFrequency of alcohol consumption (Yes/No)\nCategorical\n\n\nStress_Levels\nPatient’s stress levels (Low/Moderate/High)\nNumerical Continuous\n\n\nBMI\nBody Mass Index of the patient\nNumerical Continuous\n\n\nHeart_Rate\nResting heart rate of the patient\nNumerical Continuous\n\n\nSystolic_BP\nSystolic blood pressure\nNumerical Continuous\n\n\nDiastolic_BP\nDiastolic blood pressure\nNumerical Continuous\n\n\nFamily_History\nFamily history of heart disease (Yes/No)\nCategorical\n\n\nHeart_Attack_Occurrence\nWhether the patient had a heart attack (Yes/No)\nCategorical (Target)\n\n\n\n\n\nCode\nstr(jha_clean)\n\n\ntibble [30,000 × 17] (S3: tbl_df/tbl/data.frame)\n $ Age                    : num [1:30000] 56 69 46 32 60 25 78 38 56 75 ...\n $ Gender                 : chr [1:30000] \"Male\" \"Male\" \"Male\" \"Female\" ...\n $ Region                 : chr [1:30000] \"Urban\" \"Urban\" \"Rural\" \"Urban\" ...\n $ Smoking_History        : chr [1:30000] \"Yes\" \"No\" \"Yes\" \"No\" ...\n $ Diabetes_History       : chr [1:30000] \"No\" \"No\" \"No\" \"No\" ...\n $ Hypertension_History   : chr [1:30000] \"No\" \"No\" \"No\" \"No\" ...\n $ Cholesterol_Level      : num [1:30000] 186 185 211 211 224 ...\n $ Physical_Activity      : chr [1:30000] \"Moderate\" \"Low\" \"Low\" \"Moderate\" ...\n $ Diet_Quality           : chr [1:30000] \"Poor\" \"Good\" \"Average\" \"Good\" ...\n $ Alcohol_Consumption    : chr [1:30000] \"Low\" \"Low\" \"Moderate\" \"High\" ...\n $ Stress_Levels          : num [1:30000] 3.64 3.38 3.81 6.01 6.81 ...\n $ BMI                    : num [1:30000] 34 28.2 27.6 23.7 19.8 ...\n $ Heart_Rate             : num [1:30000] 72.3 57.5 64.7 55.1 76.7 ...\n $ Systolic_BP            : num [1:30000] 124 130 146 132 101 ...\n $ Diastolic_BP           : num [1:30000] 85.7 73.5 72 68.2 92.9 ...\n $ Family_History         : chr [1:30000] \"No\" \"Yes\" \"No\" \"No\" ...\n $ Heart_Attack_Occurrence: chr [1:30000] \"No\" \"No\" \"No\" \"No\" ...\n\n\nAfter inspection, the variables are casted as the right data types. Hence, no modification is required.\n\n\n2.2.5 Removing Outliers\nTo detect outliers, we will use the Z-Score method, which calculates how many standard deviations each data point is from the mean. Any data point with a Z-Score greater than 3 or less than -3 is typically considered an outlier.\n\n\nCode\ncontinuous_vars &lt;- c(\"Age\", \"Cholesterol_Level\", \"Stress_Levels\", \"BMI\", \"Heart_Rate\", \"Systolic_BP\", \"Diastolic_BP\")\n\n# Function to calculate Z-Score and identify outliers\nz_score_outliers &lt;- function(x) {\n  z_scores &lt;- (x - mean(x, na.rm = TRUE)) / sd(x, na.rm = TRUE)\n  sum(abs(z_scores) &gt; 3)\n}\n\nsapply(jha_clean[continuous_vars], z_score_outliers)\n\n\n              Age Cholesterol_Level     Stress_Levels               BMI \n                0                71                 0                80 \n       Heart_Rate       Systolic_BP      Diastolic_BP \n               92                83                82 \n\n\nTo ensure our dataset is free from extreme values that might skew the analysis, we will clean the outliers detected using the Z-Score method.\nA maximum of 92 outliers were found in the numerical continuous variables of the dataset. As it is confirmed through further research that some of the values for these particular variables are out of the ordinary, a method suitable for dealing with these outliers was to remove them. Any observation with a Z-Score greater than 3 or less than -3 will be removed from the continuous numerical variables.\n\n\nCode\nremove_outliers &lt;- function(df, cols) {\n  for (col in cols) {\n    z_scores &lt;- (df[[col]] - mean(df[[col]], na.rm = TRUE)) / sd(df[[col]], na.rm = TRUE)\n    df &lt;- df[abs(z_scores) &lt;= 3, ]  # Keep rows within Z-Score range\n  }\n  return(df)\n}\n\n# Remove outliers\njha_clean &lt;- remove_outliers(jha_clean, continuous_vars)\n\n\nAfter removing the outliers, the dataset now contains 29,596 observations and 17 columns.\n\n\n2.2.6 Creation of additional variables\nTo enhance the analysis, we will create new categorical variables by binning continuous variables such as age, cholesterol level, BMI, heart rate, systolic blood pressure, and diastolic blood pressure.\n\n\n\n\n\n\nNote\n\n\n\n\nConsiderations when splitting the data:\n\nHaving equal splits (to prevent skew)\nMedically relevant categories for better interpretation\n\n\n\n\n\n\nCode\n# Binning Age into categories\njha_clean &lt;- jha_clean %&gt;%\n  mutate(Age_Group = case_when(\n    Age &lt; 30 ~ \"Youth\",\n    Age &gt;= 30 & Age &lt; 50 ~ \"Adult\",\n    Age &gt;= 50 & Age &lt; 70 ~ \"Middle-aged\",\n    TRUE ~ \"Elderly\"\n  ))\n\n# Binning Cholesterol Level based on standard medical ranges\njha_clean &lt;- jha_clean %&gt;%\n  mutate(Cholesterol_Category = case_when(\n    Cholesterol_Level &lt; 200 ~ \"Desirable\",\n    Cholesterol_Level &gt;= 200 & Cholesterol_Level &lt; 240 ~ \"Borderline High\",\n    TRUE ~ \"High\"\n  ))\n\n# Binning BMI based on WHO weight status categories\njha_clean &lt;- jha_clean %&gt;%\n  mutate(BMI_Category = case_when(\n    BMI &lt; 18.5 ~ \"Underweight\",\n    BMI &gt;= 18.5 & BMI &lt; 24.9 ~ \"Normal weight\",\n    BMI &gt;= 25 & BMI &lt; 29.9 ~ \"Overweight\",\n    TRUE ~ \"Obese\"\n  ))\n\n# Binning Heart Rate into categories\njha_clean &lt;- jha_clean %&gt;%\n  mutate(Heart_Rate_Category = case_when(\n    Heart_Rate &lt; 60 ~ \"Below Normal\",\n    Heart_Rate &gt;= 60 & Heart_Rate &lt;= 100 ~ \"Normal\",\n    TRUE ~ \"Above Normal\"\n  ))\n\n# Binning Systolic BP based on AHA guidelines\njha_clean &lt;- jha_clean %&gt;%\n  mutate(Systolic_BP_Category = case_when(\n    Systolic_BP &lt; 120 ~ \"Normal\",\n    Systolic_BP &gt;= 120 & Systolic_BP &lt; 130 ~ \"Elevated\",\n    Systolic_BP &gt;= 130 & Systolic_BP &lt; 140 ~ \"Hypertension Stage 1\",\n    Systolic_BP &gt;= 140 ~ \"Hypertension Stage 2\"\n  ))\n\n# Binning Diastolic BP based on AHA guidelines\njha_clean &lt;- jha_clean %&gt;%\n  mutate(Diastolic_BP_Category = case_when(\n    Diastolic_BP &lt; 80 ~ \"Normal\",\n    Diastolic_BP &gt;= 80 & Diastolic_BP &lt; 90 ~ \"Hypertension Stage 1\",\n    TRUE ~ \"Hypertension Stage 2\"\n  ))\n\n\n\n\n2.2.7 Checking of frequency distribution and skewness\nTo ensure balanced data for modeling, we will check all categorical variables for class imbalances.\n\nCodeOutput\n\n\n\n\nCode\ncat_vars &lt;- c(\"Gender\", \"Region\", \"Smoking_History\", \"Diabetes_History\", \n              \"Hypertension_History\", \"Physical_Activity\", \"Diet_Quality\", \n              \"Alcohol_Consumption\", \"Stress_Levels\", \"Family_History\", \n              \"Heart_Attack_Occurrence\", \"Age_Group\", \"Cholesterol_Category\", \n              \"BMI_Category\", \"Heart_Rate_Category\", \"Systolic_BP_Category\", \"Diastolic_BP_Category\")\n\nfor (var in cat_vars) {\n  cat(\"\\n\", var, \"\\n\")\n  print(table(jha_clean[[var]]))\n}\n\n\n\n\n\n\n\n Gender \n\nFemale   Male \n 14736  14860 \n\n Region \n\nRural Urban \n 8821 20775 \n\n Smoking_History \n\n   No   Yes \n20705  8891 \n\n Diabetes_History \n\n   No   Yes \n23584  6012 \n\n Hypertension_History \n\n   No   Yes \n22265  7331 \n\n Physical_Activity \n\n    High      Low Moderate \n    8963     8861    11772 \n\n Diet_Quality \n\nAverage    Good    Poor \n  11807   11830    5959 \n\n Alcohol_Consumption \n\n    High      Low Moderate     None \n    5738     8970    11909     2979 \n\n Family_History \n\n   No   Yes \n20792  8804 \n\n Heart_Attack_Occurrence \n\n   No   Yes \n26675  2921 \n\n Age_Group \n\n      Adult     Elderly Middle-aged       Youth \n       9736        4810        9442        5608 \n\n Cholesterol_Category \n\nBorderline High       Desirable            High \n          12056           14872            2668 \n\n BMI_Category \n\nNormal weight         Obese    Overweight   Underweight \n        11859          5060          9874          2803 \n\n Heart_Rate_Category \n\nBelow Normal       Normal \n        4551        25045 \n\n Systolic_BP_Category \n\n            Elevated Hypertension Stage 1 Hypertension Stage 2 \n                7326                 4711                 2696 \n              Normal \n               14863 \n\n Diastolic_BP_Category \n\nHypertension Stage 1 Hypertension Stage 2               Normal \n               10266                 4636                14694 \n\n\n\n\n\nNext, we will also check for skewness in the continuous variables. Skewness indicates asymmetry in the data distribution, which can affect model predictions. Data with high skewness might require transformation for better model performance.\n\nCodeOutput\n\n\n\n\nCode\ncontinuous_vars &lt;- c(\"Age\", \"Cholesterol_Level\", \"BMI\", \"Heart_Rate\", \"Systolic_BP\", \"Diastolic_BP\")\n\nsapply(jha_clean[continuous_vars], skewness)\n\n\n\n\n\n\n              Age Cholesterol_Level               BMI        Heart_Rate \n      0.010188319       0.004952816       0.011360070       0.007628102 \n      Systolic_BP      Diastolic_BP \n     -0.022631811      -0.005712073 \n\n\n\n\n\nThe skewness values are all close to 0, indicating that the continuous variables are approximately normally distributed. Since there is no significant skewness, no transformations are necessary for these variables before model training.\n\n\n2.2.8 Preview pre-processed dataframe\nUsing str(), we can observe that our pre-processed dataset now consists of 29,596 observations and 23 columns.\n\n\nCode\nstr(jha_clean)\n\n\ntibble [29,596 × 23] (S3: tbl_df/tbl/data.frame)\n $ Age                    : num [1:29596] 56 69 46 32 60 25 78 38 56 75 ...\n $ Gender                 : chr [1:29596] \"Male\" \"Male\" \"Male\" \"Female\" ...\n $ Region                 : chr [1:29596] \"Urban\" \"Urban\" \"Rural\" \"Urban\" ...\n $ Smoking_History        : chr [1:29596] \"Yes\" \"No\" \"Yes\" \"No\" ...\n $ Diabetes_History       : chr [1:29596] \"No\" \"No\" \"No\" \"No\" ...\n $ Hypertension_History   : chr [1:29596] \"No\" \"No\" \"No\" \"No\" ...\n $ Cholesterol_Level      : num [1:29596] 186 185 211 211 224 ...\n $ Physical_Activity      : chr [1:29596] \"Moderate\" \"Low\" \"Low\" \"Moderate\" ...\n $ Diet_Quality           : chr [1:29596] \"Poor\" \"Good\" \"Average\" \"Good\" ...\n $ Alcohol_Consumption    : chr [1:29596] \"Low\" \"Low\" \"Moderate\" \"High\" ...\n $ Stress_Levels          : num [1:29596] 3.64 3.38 3.81 6.01 6.81 ...\n $ BMI                    : num [1:29596] 34 28.2 27.6 23.7 19.8 ...\n $ Heart_Rate             : num [1:29596] 72.3 57.5 64.7 55.1 76.7 ...\n $ Systolic_BP            : num [1:29596] 124 130 146 132 101 ...\n $ Diastolic_BP           : num [1:29596] 85.7 73.5 72 68.2 92.9 ...\n $ Family_History         : chr [1:29596] \"No\" \"Yes\" \"No\" \"No\" ...\n $ Heart_Attack_Occurrence: chr [1:29596] \"No\" \"No\" \"No\" \"No\" ...\n $ Age_Group              : chr [1:29596] \"Middle-aged\" \"Middle-aged\" \"Adult\" \"Adult\" ...\n $ Cholesterol_Category   : chr [1:29596] \"Desirable\" \"Desirable\" \"Borderline High\" \"Borderline High\" ...\n $ BMI_Category           : chr [1:29596] \"Obese\" \"Overweight\" \"Overweight\" \"Normal weight\" ...\n $ Heart_Rate_Category    : chr [1:29596] \"Normal\" \"Below Normal\" \"Normal\" \"Below Normal\" ...\n $ Systolic_BP_Category   : chr [1:29596] \"Elevated\" \"Elevated\" \"Hypertension Stage 2\" \"Hypertension Stage 1\" ...\n $ Diastolic_BP_Category  : chr [1:29596] \"Hypertension Stage 1\" \"Normal\" \"Normal\" \"Normal\" ..."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#eda",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#eda",
    "title": "Take-home Excercise 1: Creating data visualization beyond default",
    "section": "3. EDA",
    "text": "3. EDA\n\n3.1.1 Age Distribution by Heart Attack Occurence\n\n\nCode\njha_clean$Heart_Attack_Occurrence &lt;- as.factor(jha_clean$Heart_Attack_Occurrence)\n\nviolin_plot &lt;- ggplot(jha_clean, aes(x = Heart_Attack_Occurrence, y = Age, fill = Heart_Attack_Occurrence)) +\n  geom_violin(trim = FALSE, scale = \"area\") +\n  geom_boxplot(width = 0.1, position = position_dodge(0.9), outlier.shape = NA) +\n  stat_summary(fun=median, geom=\"point\", shape=18, size=3, color=\"black\") +\n  stat_summary(fun=median, geom=\"text\", aes(label=round(..y..,1)), vjust=-1.5) +\n  labs(title = \"Heart Attack Occurrence by Age Distribution\",\n       x = \"Heart Attack Occurrence\", y = \"Age\",\n       subtitle = \"Violin plot with boxplot overlay and Bar plot\") +\n  theme_minimal()\n\nbar_plot &lt;- ggbarstats(jha_clean, \n                       x = Age_Group, \n                       y = Heart_Attack_Occurrence)\n\nviolin_plot + bar_plot + plot_layout(guides = \"collect\") & theme(legend.position = \"bottom\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInsight\n\n\n\n\nPatients who experienced heart attacks (49 years) tend to be slightly older, with a median age higher than that of patients without heart attacks (48 years).\nBoth groups cover a similar age range, but the density is higher in the adult and elderly brackets for heart attack cases, suggesting a strong association between age and heart attack occurrence.\nTo further confirm the observation that there is a strong association between age and heart attack occurence, a significant test of association was performed on the right. However, given the Cramer’s V value (0.01), there seems to be a weak association between age group and heart attack occurrence.\n\n\n\n\n\n3.1.2 Exploring relationships between Heart Attack Occurrence, by Age Group and Heart Rate\n\n\nCode\n# Ensure Age_Group are in order\njha_clean$Age_Group &lt;- factor(jha_clean$Age_Group, levels = c(\"Youth\", \"Adult\", \"Middle-aged\", \"Elderly\"))\n\n# Create the faceted density plot\nheart_rate_density &lt;- ggplot(data = jha_clean, aes(x = Heart_Rate, fill = Heart_Attack_Occurrence)) +    \n  geom_density(alpha = 0.3) + \n  facet_wrap(~ Age_Group, scales = \"free_y\", nrow = 4) +\n  labs(x = \"Heart Rate\", y = \"Density\", title = \"Heart Rate Distribution Across Age Groups\", \n       subtitle = \"Density and Box plot of Heart Rate, colored by Heart Attack Occurrence\") +\n  theme_minimal() +\n  theme(legend.position = \"none\", \n        plot.title = element_text(face = \"bold\", size = 12), \n        plot.subtitle = element_text(size = 8), \n        axis.title.y = element_text(size = 8), \n        axis.title.x = element_text(size = 8))\n\n# Create the boxplot\nheart_rate_boxplot &lt;- ggplot(jha_clean, aes(x = Age_Group, y = Heart_Rate, fill = Heart_Attack_Occurrence)) +\n  geom_boxplot(position = position_dodge(0.8)) +\n  stat_summary(fun = mean, geom = \"point\", shape = 18, size = 3, color = \"black\", position = position_dodge(0.8)) +\n  stat_summary(fun = median, geom = \"text\",aes(label=round(..y..,1)), vjust=-1.0, size = 2, position = position_dodge(0.8)) +\n  coord_cartesian(ylim = c(min(jha_clean$Heart_Rate), max(jha_clean$Heart_Rate))) +\n  theme_minimal() +\n  labs(y = \"Heart Rate\") +\n  theme(axis.title.x = element_blank(), legend.title = element_text(face = \"bold\", size = 8), \n        plot.subtitle = element_text(size = 8), axis.title.y = element_text(size = 8))\n\n# Combine the plots with adjusted layout\nheart_rate_density + heart_rate_boxplot\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInsight\n\n\n\n\nAcross all age groups, patients who experienced heart attacks tend to have slightly higher median heart rates compared to those who did not.\nIn the Elderly group, the heart rates for patients with heart attacks are more concentrated towards the higher end of the scale.\nThe Youth group show a broader spread of heart rates, with less distinction between patients with and without heart attacks.\nHigher heart rates, especially in older age groups, might indicate an association with increased heart attack risk, though younger patients show less variation.\n\n\n\n\n\n3.1.3 Impact of Historical Risk Factors on Heart Attack Incidence by Age Group\n\nCodeOutput\n\n\n\n\nCode\n# Calculate heart attack percentages for each risk factor across age groups\nrisk_factors_summary &lt;- jha_clean %&gt;%\n  group_by(Age_Group) %&gt;%\n  summarise(\n    Smoking = mean(Heart_Attack_Occurrence == \"Yes\" & Smoking_History == \"Yes\") * 100,\n    Diabetes = mean(Heart_Attack_Occurrence == \"Yes\" & Diabetes_History == \"Yes\") * 100,\n    Hypertension = mean(Heart_Attack_Occurrence == \"Yes\" & Hypertension_History == \"Yes\") * 100,\n    Family_History = mean(Heart_Attack_Occurrence == \"Yes\" & Family_History == \"Yes\") * 100,\n    .groups = 'drop'\n  ) %&gt;%\n  # Convert to long format for plotting\n  pivot_longer(\n    cols = c(Smoking, Diabetes, Hypertension, Family_History),\n    names_to = \"Risk_Factor\",\n    values_to = \"Heart_Attack_Percentage\"\n  )\n\n# Create the visualization\nggplot(risk_factors_summary, \n       aes(x = Age_Group, \n           y = Heart_Attack_Percentage, \n           fill = Risk_Factor)) +\n  geom_bar(stat = \"identity\", \n           position = \"dodge\",\n           width = 0.7) +\n  geom_text(aes(label = sprintf(\"%.1f%%\", Heart_Attack_Percentage)),\n            position = position_dodge(width = 0.7),\n            vjust = -0.5,\n            size = 3) +\n  scale_fill_manual(values = c(\"Smoking\" = \"#D55E00\", \n                              \"Diabetes\" = \"#0072B2\",\n                              \"Hypertension\" = \"#009E73\",\n                              \"Family_History\" = \"#CC79A7\")) +\n  labs(title = \"Heart Attack Occurrence by Risk Factors Across Age Groups\",\n       subtitle = \"Percentage of heart attacks in patients with each risk factor\",\n       x = \"Age Group\",\n       y = \"Percentage of Heart Attacks (%)\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 12, face = \"bold\"),\n    plot.subtitle = element_text(size = 10),\n    axis.title = element_text(size = 10),\n    axis.text = element_text(size = 9),\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    legend.position = \"right\",\n    legend.title = element_text(size = 10)\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInsight\n\n\n\n\nAll risk factors maintain relatively consistent levels across age groups (2.0-3.2% range)\nFamily History seems to contribute to a higher risk of heart attack occurrence across age group after youth.\nSmoking consistently presents the highest risk across all age groups.\nSurprisingly, younger age groups show comparable risk levels to older groups.\nThe combination of multiple risk factors might compound the risk, though this isn’t shown in the visualization.\nNo dramatic age-related increases in risk for any single factor, suggesting these are relatively independent risk factors.\n\n\n\n\n\n3.1.4\n\nCodeOutput\n\n\n\n\nCode\n # Prepare data focusing on Heart Attack Occurrence = \"Yes\" by demographic and lifestyle factors\nheart_attack_focus &lt;- jha_clean %&gt;%\n  filter(Heart_Attack_Occurrence == \"Yes\") %&gt;%\n  select(Gender, Region, Physical_Activity, Diet_Quality, Alcohol_Consumption, Heart_Attack_Occurrence) %&gt;%\n  group_by(Gender, Region, Physical_Activity, Diet_Quality, Alcohol_Consumption, Heart_Attack_Occurrence) %&gt;%\n  summarise(count = n(), .groups = 'drop')\n\n# Create parallel sets visualization focusing on heart attack occurrences for \"Yes\"\nggplot(heart_attack_focus,\n       aes(axis1 = Gender, \n           axis2 = Region,\n           axis3 = Physical_Activity,\n           axis4 = Diet_Quality,\n           axis5 = Alcohol_Consumption,\n           y = count)) +\n  geom_alluvium(aes(fill = Heart_Attack_Occurrence), alpha = 0.6) +\n  geom_stratum(aes(fill = Heart_Attack_Occurrence), alpha = 0.8) +\n  geom_text(stat = \"stratum\",\n            aes(label = after_stat(stratum)), size = 3) +\n  scale_fill_manual(values = c(\"Yes\" = \"#4682B4\")) +\n  scale_x_discrete(limits = c(\"Gender\", \"Region\", \"Physical_Activity\", \"Diet_Quality\", \"Alcohol_Consumption\"),\n                   labels = c(\"Gender\", \"Region\", \"Physical Activity\", \"Diet Quality\", \"Alcohol Consumption\")) +\n  labs(title = \"Heart Attack Occurrence Distribution\",\n       subtitle = \"Relation between Demographic and Lifestyle Factors to Heart Attack Occurrence\",\n       x = \"Demographic and Lifestyle Factors\",\n       y = \"Count\",\n       fill = \"Heart Attack Occurrence\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1),\n        axis.title = element_blank(),\n        plot.title = element_text(size = 12, face = \"bold\"),\n        plot.subtitle = element_text(size = 10),\n        legend.position = \"none\",\n        axis.title.x = element_blank())\n\n# Prepare data focusing on Heart Attack Occurrence = \"No\" by demographic and lifestyle factors\nno_heart_attack_focus &lt;- jha_clean %&gt;%\n  filter(Heart_Attack_Occurrence == \"No\") %&gt;%\n  select(Gender, Region, Physical_Activity, Diet_Quality, Alcohol_Consumption, Heart_Attack_Occurrence) %&gt;%\n  group_by(Gender, Region, Physical_Activity, Diet_Quality, Alcohol_Consumption, Heart_Attack_Occurrence) %&gt;%\n  summarise(count = n(), .groups = 'drop')\n\n# Create the parallel sets visualization focusing on \"No\" heart attack occurrences\nggplot(no_heart_attack_focus,\n       aes(axis1 = Gender, \n           axis2 = Region,\n           axis3 = Physical_Activity,\n           axis4 = Diet_Quality,\n           axis5 = Alcohol_Consumption,\n           y = count)) +\n  geom_alluvium(aes(fill = Heart_Attack_Occurrence), alpha = 0.6) +\n  geom_stratum(aes(fill = Heart_Attack_Occurrence), alpha = 0.8) +\n  geom_text(stat = \"stratum\",\n            aes(label = after_stat(stratum)), size = 3) +\n  scale_fill_manual(values = c(\"No\" = \"#D32F2F\")) +\n  scale_x_discrete(limits = c(\"Gender\", \"Region\", \"Physical_Activity\", \"Diet_Quality\", \"Alcohol_Consumption\"),\n                   labels = c(\"Gender\", \"Region\", \"Physical Activity\", \"Diet Quality\", \"Alcohol Consumption\")) +\n  labs(title = \"Heart Attack Occurrence Distribution\",\n       subtitle = \"Relation between Demographic and Lifestyle Factors to Heart Attack Occurrence\",\n       x = \"Demographic and Lifestyle Factors\",\n       y = \"Count\",\n       fill = \"Heart Attack Occurrence\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1),\n        axis.title = element_blank(),\n        plot.title = element_text(size = 12, face = \"bold\"),\n        plot.subtitle = element_text(size = 10),\n        legend.position = \"none\",\n        axis.title.x = element_blank())\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInsight\n\n\n\n\nThere is a higher percentage of indivuals that experience heart attack coming from urban regions regardless of gender.\nModerate physical activity is common among those with heart attacks.\nGood and Average diet appears to be linked to a higher occurrence of heart attacks.\nModerate and low alcohol consumption shows the most notable presence in the heart attack group.\nGeneral Insight: Although the plot emphasizes the impact of lifestyle factors like physical activity, diet, and alcohol consumption on heart attack occurrence, it simply depicts the observations of these factors in the group of people with heart attack occurrence.\nFurther Investigation: Upon further comparison with the group with no heart attack occurrence, it seems to exhibit a similar pattern to the group with hear attack occurrence. Statistical studies have to be performed to confirm if the pattern is more significant in one group than the other.\n\n\n\n\n\n3.1.5 Exploring impact of risk factors on Heart Attack Occurence\n\n\nCode\n# Create binary risk factor columns (TRUE if risk factor present, FALSE otherwise)\njha_clean_filtered &lt;- jha_clean %&gt;%\n  mutate(\n    smoking_risk = ifelse(Smoking_History == \"Yes\", 1, 0),\n    diabetes_risk = ifelse(Diabetes_History == \"Yes\", 1, 0),\n    hypertension_risk = ifelse(Hypertension_History == \"Yes\", 1, 0),\n    cholesterol_risk = ifelse(Cholesterol_Category == \"High\", 1, 0),\n    bmi_risk = ifelse(BMI_Category == \"Obese\", 1, 0),\n    bp_risk = ifelse(Systolic_BP_Category %in% c(\"Hypertension Stage 1\", \"Hypertension Stage 2\"), 1, 0),\n    heart_rate_risk = ifelse(Heart_Rate_Category == \"Above Normal\", 1, 0)\n  )\n\n# Calculate the total number of risk factors for each individual\njha_clean_filtered &lt;- jha_clean_filtered %&gt;%\n  mutate(risk_level = smoking_risk + diabetes_risk + hypertension_risk + cholesterol_risk + bmi_risk + bp_risk + heart_rate_risk)\n\n# Summarize the number of individuals with each risk level (from 0 to 8 risk factors)\nrisk_summary &lt;- jha_clean_filtered %&gt;%\n  group_by(risk_level) %&gt;%\n  summarise(\n    total_patients = n(),\n    heart_attacks = sum(Heart_Attack_Occurrence == \"Yes\"),\n    risk_percentage = (heart_attacks / total_patients) * 100\n  ) %&gt;%\n  mutate(risk_label = paste(risk_level, \"Risk Factors\"))\n\n# Calculate the percentage of the population with each risk level\ntotal_population &lt;- nrow(jha_clean_filtered)\nrisk_summary &lt;- risk_summary %&gt;%\n  mutate(population_percentage = (total_patients / total_population) * 100)\n\n# Display the table\nprint(risk_summary)\n\n\n# A tibble: 7 × 6\n  risk_level total_patients heart_attacks risk_percentage risk_label    \n       &lt;dbl&gt;          &lt;int&gt;         &lt;int&gt;           &lt;dbl&gt; &lt;chr&gt;         \n1          0           6951           690            9.93 0 Risk Factors\n2          1          11677          1135            9.72 1 Risk Factors\n3          2           7809           779            9.98 2 Risk Factors\n4          3           2615           260            9.94 3 Risk Factors\n5          4            493            53           10.8  4 Risk Factors\n6          5             49             4            8.16 5 Risk Factors\n7          6              2             0            0    6 Risk Factors\n# ℹ 1 more variable: population_percentage &lt;dbl&gt;\n\n\n\nCodeOutput\n\n\n\n\nCode\nggplot(risk_summary, \n       aes(x = risk_level, y = risk_percentage)) +\n  geom_line(size = 1, color = \"#2C7BB6\") +\n  geom_point(aes(size = total_patients), \n             color = \"#2C7BB6\", \n             alpha = 0.7) +\n  geom_text(aes(label = sprintf(\"%.1f%%\", risk_percentage)),\n            vjust = -1, \n            size = 3) +\n  geom_text(aes(label = paste(\"n =\", total_patients)),\n            vjust = 2, \n            size = 3) +\n  scale_x_continuous(breaks = 1:6, \n                     labels = c(\"1 Risk Factor\", \"2 Risk Factors\", \"3 Risk Factors\", \"4 Risk Factors\", \"5 Risk Factors\", \"6 Risk Factors\")) +\n  scale_size_continuous(range = c(5, 15)) +\n  labs(title = \"Impact of Risk Factors on Heart Attack Occurrence\",\n       subtitle = \"Percentage of heart attacks increases as more risk factors accumulate\",\n       x = \"Accumulated Risk Factors\",\n       y = \"Heart Attack Occurrence (%)\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 12, face = \"bold\"),\n    plot.subtitle = element_text(size = 10),\n    legend.position = \"none\",\n    panel.grid.minor = element_blank(),\n    axis.text.x = element_text(angle = 45, hjust = 1, size = 8)\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInsight\n\n\n\n\nThe percentage of heart attacks remains relatively stable (around 9.9%) for individuals with 1 to 3 risk factors, indicating that a few risk factors don’t dramatically increase heart attack occurrence.\nWith 4 to 5 risk factors, the heart attack occurrence percentage rises slightly to 10.0% and 10.6%, showing a modest increase in risk.\nAt 6 risk factors, the heart attack occurrence drops sharply to 0%, likely due to a very small sample size (only 49 individuals), suggesting unreliable data for this group.\nLarger sample sizes at 1 to 3 risk factors ensure more reliable results, while smaller sample sizes at higher risk levels lead to potential inconsistencies.\nThe overall trend indicates that heart attack risk increases slightly with the accumulation of risk factors up to 5.\n\n\n\n\n\n3.1.6 Summary\n\n3.1.6.1 Conclusion\n\nAge and Heart Attack: Adult and Middle-Age patients tend to have higher heart attack occurrences, but the weak association with age suggests that further analysis is needed to better understand its impact.\nHeart Rate and Risk: Patients with heart attacks show slightly higher heart rates, especially in older age groups. While there is a trend, more analysis is required to confirm its significance.\nRisk Factors: Smoking is the most consistent risk factor across age groups, while family history increases risk in older individuals. Risk factors appear to act independently.\nLifestyle Factors: Physical activity, diet, and alcohol consumption are linked to heart attack occurrence, but similar patterns are seen in both heart attack and non-heart attack groups.\nAccumulated Risk: Heart attack occurrence increases slightly with the accumulation of 1 to 5 risk factors. However, due to small sample sizes at higher risk levels, further modeling and collection of data for risk levels 6 and above are required for more reliable insights.\n\n\n\n3.1.6.2 Future Work\nWhile the visualizations provide useful observations, further statistical analyses and modeling techniques (e.g., logistic regression, decision trees) are essential to better explain the true impact of individual and combined variables on heart attack occurrence. These models can help quantify the relative contribution of each variable, determine interactions between risk factors and potentially identify new insights that can inform preventive measures and interventions for heart attacks."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-class_Ex02.html",
    "href": "In-class_Ex/In-class_Ex02/In-class_Ex02.html",
    "title": "In-class_Ex02",
    "section": "",
    "text": "&lt;script type='text/javascript'&gt;                    var divElement = document.getElementById('viz1737790134579');                    var vizElement = divElement.getElementsByTagName('object')[0];                    if ( divElement.offsetWidth &gt; 800 ) { vizElement.style.width='100%';vizElement.style.height=(divElement.offsetWidth*0.75)+'px';} else if ( divElement.offsetWidth &gt; 500 ) { vizElement.style.width='100%';vizElement.style.height=(divElement.offsetWidth*0.75)+'px';} else { vizElement.style.width='100%';vizElement.style.height='1427px';}                     var scriptElement = document.createElement('script');                    scriptElement.src = 'https://public.tableau.com/javascripts/api/viz_v1.js';                    vizElement.parentNode.insertBefore(scriptElement, vizElement);                &lt;/script&gt;"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 01: Layered Grammer of Graphics",
    "section": "",
    "text": "Loading tidyverse onto r environment by using the code chunk below\n\npacman::p_load(tidyverse)\n\n\n\nCode chunk below uses read_csv() of readr to import Exam_data.csv into r environment as a tibble data.frame.\n\nexam_data &lt;- read_csv(\"chap01/data/Exam_data.csv\")\n\n\n\n\nFirst, let us compare the differences between R Graphics, the core graphical functions of Base R and ggplot in plotting a simple histogram.\n\nhist(exam_data$MATHS)\n\n\n\n\n\n\n\nggplot(data=exam_data, aes(x = MATHS)) +\n  geom_histogram(bins=10, \n                 boundary = 100,\n                 color=\"black\", \n                 fill=\"grey\") +\n  ggtitle(\"Distribution of Maths scores\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01.html#importing-data",
    "href": "Hands-on_Ex/Hands-on_Ex01.html#importing-data",
    "title": "Hands-on Exercise 01: Layered Grammer of Graphics",
    "section": "",
    "text": "Code chunk below uses read_csv() of readr to import Exam_data.csv into r environment as a tibble data.frame.\n\nexam_data &lt;- read_csv(\"chap01/data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01.html#plotting-a-histogram",
    "href": "Hands-on_Ex/Hands-on_Ex01.html#plotting-a-histogram",
    "title": "Hands-on Exercise 01: Layered Grammer of Graphics",
    "section": "",
    "text": "First, let us compare the differences between R Graphics, the core graphical functions of Base R and ggplot in plotting a simple histogram.\n\nhist(exam_data$MATHS)\n\n\n\n\n\n\n\nggplot(data=exam_data, aes(x = MATHS)) +\n  geom_histogram(bins=10, \n                 boundary = 100,\n                 color=\"black\", \n                 fill=\"grey\") +\n  ggtitle(\"Distribution of Maths scores\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01.html#blank-canvas",
    "href": "Hands-on_Ex/Hands-on_Ex01.html#blank-canvas",
    "title": "Hands-on Exercise 01: Layered Grammer of Graphics",
    "section": "Blank Canvas",
    "text": "Blank Canvas\n\nggplot(data=exam_data)\n\n\n\n\n\n\n\n\nIncluding the x-axis and the axis’s label\n\nggplot(data=exam_data, \n       aes(x= MATHS))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01.html#plotting-a-bar-chart",
    "href": "Hands-on_Ex/Hands-on_Ex01.html#plotting-a-bar-chart",
    "title": "Hands-on Exercise 01: Layered Grammer of Graphics",
    "section": "Plotting a bar chart",
    "text": "Plotting a bar chart\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01.html#plotting-a-dot-plot",
    "href": "Hands-on_Ex/Hands-on_Ex01.html#plotting-a-dot-plot",
    "title": "Hands-on Exercise 01: Layered Grammer of Graphics",
    "section": "Plotting a dot plot",
    "text": "Plotting a dot plot\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(dotsize = 0.5)\n\n\n\n\n\n\n\n\nImprove the visual by removing the y-axis and changing the binwidth\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(binwidth=2.5,         \n               dotsize = 0.5) +      \n  scale_y_continuous(NULL,           \n                     breaks = NULL)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01.html#plotting-a-histogram-1",
    "href": "Hands-on_Ex/Hands-on_Ex01.html#plotting-a-histogram-1",
    "title": "Hands-on Exercise 01: Layered Grammer of Graphics",
    "section": "Plotting a histogram",
    "text": "Plotting a histogram\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_histogram() \n\n\n\n\n\n\n\n\nModifying the histogram\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20,            \n                 color=\"black\",      \n                 fill=\"light blue\")  \n\n\n\n\n\n\n\n\nProviding additional info by sub grouping the visual\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           fill = GENDER)) +\n  geom_histogram(bins=20, \n                 color=\"grey30\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01.html#plotting-a-kernel-density-estimate-plot",
    "href": "Hands-on_Ex/Hands-on_Ex01.html#plotting-a-kernel-density-estimate-plot",
    "title": "Hands-on Exercise 01: Layered Grammer of Graphics",
    "section": "Plotting a kernel density estimate plot",
    "text": "Plotting a kernel density estimate plot\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_density() \n\n\n\n\n\n\n\n\nProviding additional info by sub grouping the visual\n\nggplot(data=exam_data, \n       aes(x = MATHS, \n           colour = GENDER)) +\n  geom_density()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01.html#plotting-a-box-plot",
    "href": "Hands-on_Ex/Hands-on_Ex01.html#plotting-a-box-plot",
    "title": "Hands-on Exercise 01: Layered Grammer of Graphics",
    "section": "Plotting a box plot",
    "text": "Plotting a box plot\n\nggplot(data=exam_data, \n       aes(y = MATHS,       \n           x= GENDER)) +    \n  geom_boxplot()\n\n\n\n\n\n\n\n\nImproving the visual by converting the boxplot into a notched plot\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot(notch=TRUE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01.html#plotting-a-violin-plot",
    "href": "Hands-on_Ex/Hands-on_Ex01.html#plotting-a-violin-plot",
    "title": "Hands-on Exercise 01: Layered Grammer of Graphics",
    "section": "Plotting a violin plot",
    "text": "Plotting a violin plot\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_violin()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01.html#plotting-a-scatter-plot",
    "href": "Hands-on_Ex/Hands-on_Ex01.html#plotting-a-scatter-plot",
    "title": "Hands-on Exercise 01: Layered Grammer of Graphics",
    "section": "Plotting a scatter plot",
    "text": "Plotting a scatter plot\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01.html#combining-different-types-of-plots",
    "href": "Hands-on_Ex/Hands-on_Ex01.html#combining-different-types-of-plots",
    "title": "Hands-on Exercise 01: Layered Grammer of Graphics",
    "section": "Combining different types of plots",
    "text": "Combining different types of plots\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot() +                    \n  geom_point(position=\"jitter\", \n             size = 0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01.html#basic-box-plot",
    "href": "Hands-on_Ex/Hands-on_Ex01.html#basic-box-plot",
    "title": "Hands-on Exercise 01: Layered Grammer of Graphics",
    "section": "Basic box plot",
    "text": "Basic box plot\nWithout means\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot()\n\n\n\n\n\n\n\n\nWith means (Method 1)\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  stat_summary(geom = \"point\",       \n               fun = \"mean\",         \n               colour =\"red\",        \n               size=4)       \n\n\n\n\n\n\n\n\nWith means (Method 2)\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\",        \n             fun=\"mean\",           \n             colour=\"red\",          \n             size=4)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01.html#adding-a-best-fit-curve-on-a-scatterplot",
    "href": "Hands-on_Ex/Hands-on_Ex01.html#adding-a-best-fit-curve-on-a-scatterplot",
    "title": "Hands-on Exercise 01: Layered Grammer of Graphics",
    "section": "Adding a best fit curve on a scatterplot",
    "text": "Adding a best fit curve on a scatterplot\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(linewidth=0.5)\n\n\n\n\n\n\n\n\nUtilizing of another smoothing method\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              linewidth=0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01.html#facet_wrap",
    "href": "Hands-on_Ex/Hands-on_Ex01.html#facet_wrap",
    "title": "Hands-on Exercise 01: Layered Grammer of Graphics",
    "section": "Facet_wrap()",
    "text": "Facet_wrap()\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_wrap(~ CLASS)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01.html#facet_grid",
    "href": "Hands-on_Ex/Hands-on_Ex01.html#facet_grid",
    "title": "Hands-on Exercise 01: Layered Grammer of Graphics",
    "section": "Facet_grid()",
    "text": "Facet_grid()\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_grid(~ CLASS)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01.html#default-bar-chart",
    "href": "Hands-on_Ex/Hands-on_Ex01.html#default-bar-chart",
    "title": "Hands-on Exercise 01: Layered Grammer of Graphics",
    "section": "Default bar chart",
    "text": "Default bar chart\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()\n\n\n\n\n\n\n\n\nWith coord_flip()\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01.html#default-scatterplot",
    "href": "Hands-on_Ex/Hands-on_Ex01.html#default-scatterplot",
    "title": "Hands-on Exercise 01: Layered Grammer of Graphics",
    "section": "Default scatterplot",
    "text": "Default scatterplot\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, size=0.5)\n\n\n\n\n\n\n\n\nWith the y-axis and x-axis being fixed from 0-100\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01.html#gray-theme",
    "href": "Hands-on_Ex/Hands-on_Ex01.html#gray-theme",
    "title": "Hands-on Exercise 01: Layered Grammer of Graphics",
    "section": "Gray Theme",
    "text": "Gray Theme\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_gray()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01.html#classic-theme",
    "href": "Hands-on_Ex/Hands-on_Ex01.html#classic-theme",
    "title": "Hands-on Exercise 01: Layered Grammer of Graphics",
    "section": "Classic Theme",
    "text": "Classic Theme\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_classic()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01.html#minimal-theme",
    "href": "Hands-on_Ex/Hands-on_Ex01.html#minimal-theme",
    "title": "Hands-on Exercise 01: Layered Grammer of Graphics",
    "section": "Minimal Theme",
    "text": "Minimal Theme\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_minimal()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02.html",
    "href": "Hands-on_Ex/Hands-on_Ex02.html",
    "title": "Hands-on Exercise 02: Beyond ggplot2 Fundamentals",
    "section": "",
    "text": "pacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02.html#without-ggrepel",
    "href": "Hands-on_Ex/Hands-on_Ex02.html#without-ggrepel",
    "title": "Hands-on Exercise 02: Beyond ggplot2 Fundamentals",
    "section": "Without ggrepel",
    "text": "Without ggrepel\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label(aes(label = ID), \n             hjust = .5, \n             vjust = -.5) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02.html#with-ggrepel",
    "href": "Hands-on_Ex/Hands-on_Ex02.html#with-ggrepel",
    "title": "Hands-on Exercise 02: Beyond ggplot2 Fundamentals",
    "section": "With ggrepel",
    "text": "With ggrepel\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label_repel(aes(label = ID), \n                   fontface = \"bold\") +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02.html#gray-theme",
    "href": "Hands-on_Ex/Hands-on_Ex02.html#gray-theme",
    "title": "Hands-on Exercise 02: Beyond ggplot2 Fundamentals",
    "section": "Gray Theme",
    "text": "Gray Theme\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  theme_gray() +\n  ggtitle(\"Distribution of Maths scores\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02.html#economist-theme",
    "href": "Hands-on_Ex/Hands-on_Ex02.html#economist-theme",
    "title": "Hands-on Exercise 02: Beyond ggplot2 Fundamentals",
    "section": "Economist Theme",
    "text": "Economist Theme\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_economist()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02.html#normal-plots",
    "href": "Hands-on_Ex/Hands-on_Ex02.html#normal-plots",
    "title": "Hands-on Exercise 02: Beyond ggplot2 Fundamentals",
    "section": "Normal Plots",
    "text": "Normal Plots\n\np1 &lt;- ggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n\n\np2 &lt;- ggplot(data=exam_data, \n             aes(x = ENGLISH)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n\n\np3 &lt;- ggplot(data=exam_data, \n             aes(x= MATHS, \n                 y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02.html#creating-composite-graphics-with-patchwork",
    "href": "Hands-on_Ex/Hands-on_Ex02.html#creating-composite-graphics-with-patchwork",
    "title": "Hands-on Exercise 02: Beyond ggplot2 Fundamentals",
    "section": "Creating Composite Graphics with patchwork",
    "text": "Creating Composite Graphics with patchwork\nSide-by-side\n\np1 + p2\n\n\n\n\n\n\n\n\n“/” operator to stack two ggplot2 graphs, “|” operator to place the plots beside each other, “()” operator the define the sequence of the plotting.\n\n(p1 / p2) | p3\n\n\n\n\n\n\n\n\nAuto-tagging\n\n((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02.html#creating-composite-graphics-with-inset",
    "href": "Hands-on_Ex/Hands-on_Ex02.html#creating-composite-graphics-with-inset",
    "title": "Hands-on Exercise 02: Beyond ggplot2 Fundamentals",
    "section": "Creating Composite Graphics with Inset",
    "text": "Creating Composite Graphics with Inset\n\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02.html#creating-a-composite-figure-using-patchwork-and-ggtheme",
    "href": "Hands-on_Ex/Hands-on_Ex02.html#creating-a-composite-figure-using-patchwork-and-ggtheme",
    "title": "Hands-on Exercise 02: Beyond ggplot2 Fundamentals",
    "section": "Creating a composite figure using patchwork and ggtheme",
    "text": "Creating a composite figure using patchwork and ggtheme\n\npatchwork &lt;- (p1 / p2) | p3\npatchwork & theme_economist()"
  }
]